include modules/*.conf;

# user nginx nginx;
worker_processes 4;

pid        /var/run/nginx.pid;

worker_rlimit_nofile 10240;

events {
	use epoll;
	worker_connections 4096;
}


http {
	include       mime.types;
	default_type  application/octet-stream;
	types_hash_max_size 2048;
	
	charset utf-8;
	charset_types *;

	log_format  main	'$request_method $host$request_uri, STATUS $status, $body_bytes_sent bytes response';
						
	log_format  tiny	'$request_method $host$request_uri $status';
						
	log_format  cache	'-- $request_method $host$request_uri $status, $body_bytes_sent sent\n'
						'      Time: $upstream_response_time, CACHE: $upstream_cache_status';
						
	log_format  robot	'[$time_local] "$request" FROM "$http_referer" '
				'\n Status: $status '
				' "$http_user_agent" ';
	
	access_log /dev/stdout main;
	error_log /dev/stderr warn;
	
	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 50m;

	sendfile on;
	tcp_nopush on;

	keepalive_timeout 60;


	proxy_buffer_size          1m;
	proxy_buffers              16 1m;
	proxy_busy_buffers_size    1m;
	proxy_intercept_errors on;

	tcp_nodelay on;

	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 1m;
	fastcgi_buffers 16 1m;
	fastcgi_busy_buffers_size 1m;
	fastcgi_temp_file_write_size 8m;

	gzip on;
	gzip_min_length  1k;
	gzip_buffers     64 8k;
	gzip_http_version 1.0;
	gzip_comp_level 2;
	gzip_types      text/* application/javascript application/xml;
	gzip_vary on;
	gzip_proxied  any;
	
	#autoindex on;
	
	include conf.d/*.conf;
	include other-sites.d/*.conf;
	include vhost.d/*.conf;
}

stream {
	# resolver 127.0.0.1;

	# log_format  tiny        '[$time_local] $protocol:$connection $remote_addr:$remote_port -> $server_port';
	# access_log /dev/stdout tiny;
	# error_log /dev/stderr warn;

	include servers.d/*.conf;
}
